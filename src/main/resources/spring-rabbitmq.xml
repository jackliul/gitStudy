<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd">

	<!-- 连接工厂的配置 -->
	<rabbit:connection-factory id="connectionFactory"
		host="${rabbitmq.host}" 
		port="${rabbitmq.port}" 
		virtual-host="${rabbitmq.vhost}"
		username="${rabbitmq.username}"
		password="${rabbitmq.password}" />
	
	<!-- 使用admin在容器启动时，自动获取exchange和queue，并且注册到rabbitmq服务器中 -->
	<rabbit:admin connection-factory="connectionFactory"  id="rabbitConnectionAdmin"/>
	<!-- 指定名称为 timingTasks_queue 的列队 -->	
	<!-- 正常配置 -->
	<rabbit:queue id="timingTasks_Q" name="timingTasks_Q" durable="true" exclusive="false" auto-delete="false" declared-by="rabbitConnectionAdmin">
		<rabbit:queue-arguments>
            <entry key="x-dead-letter-exchange" value="timingTasks_X_DEAD"/>
            <entry key="x-dead-letter-routing-key" value="timingTasks_R"/>
            <entry key="x-message-ttl">
				<value  type="java.lang.Long">180000</value>
			</entry>
        </rabbit:queue-arguments>
	</rabbit:queue>
    <rabbit:direct-exchange id="timingTasks_X" name="timingTasks_X" durable="true" auto-delete="false" declared-by="rabbitConnectionAdmin" >
        <rabbit:bindings>  
            <rabbit:binding queue="timingTasks_Q" key="timingTasks_R"/>  
        </rabbit:bindings>  
    </rabbit:direct-exchange>  
    <!--死信配置  -->
    <rabbit:queue id="timingTasks_Q_DEAD" durable="true" auto-delete="false" exclusive="false" name="timingTasks_Q_DEAD" declared-by="rabbitConnectionAdmin" />
    <rabbit:direct-exchange id="timingTasks_X_DEAD" name="timingTasks_X_DEAD" durable="true" auto-delete="false" declared-by="rabbitConnectionAdmin" >
        <rabbit:bindings>  
            <rabbit:binding queue="timingTasks_Q_DEAD" key="timingTasks_R"/>  
        </rabbit:bindings>  
    </rabbit:direct-exchange>  
	
	<!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列，由于Gson的速度快于jackson,这里替换为Gson的一个实现 -->  
    <bean id="jsonMessageConverter" class="com.jacliu.test.rabbitmq.core.Gson2JsonMessageConverter" />  
	<!-- 定义操作模板，还可用 message-converter属性指定消息转换器，此处不配置，spring会给我们使用默认的转换器把消息转换成message对象 -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" exchange="timingTasks_X" routing-key="timingTasks_R"/>
	
	<!-- 队列消费者 -->
	<bean id="timingTasksListener" class="com.jacliu.test.rabbitmq.lisenter.TimingTasksListener" />
	<rabbit:listener-container connection-factory="connectionFactory"  acknowledge="manual" >
		<rabbit:listener queues="timingTasks_Q" ref="timingTasksListener" />
	</rabbit:listener-container>
</beans>
